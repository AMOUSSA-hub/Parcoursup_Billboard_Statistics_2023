<menu>

  <div class="column is-half box level-left">
    <div class="control has-icons-left has-icons-right">
      <div class="columns">
      <input class="column input is-3-quarter" type="text" placeholder="  Formation"><button class="column" disabled ={!back} onclick={() => Back() }  ><</button>
      </div>
      <span class="icon is-left">
       
        <i class="fas fa-search"></i>
      </span>
    </div>
  
  
    <ul class="menu-list">
  
          <li each={item in items}>
      <div class="columns m-2">
        <a onclick={deep === 1 ? () => this.Fill_List_With_Form_detailled(item.name) : deep === 2 ? () => Fill_With_Libelle_form(item.name): deep === 3 ? () => {props.SendForm(item.name,item.count);this.addtoPath(item.name,2);}: null } class="column">{item.name}</a>
        <span class="button is-primary ">{item.count}</span>
      </div>
    </li>
  
    </ul>

    <script>

    


  export default {
    
      items: [], // initialisation de l'Ã©tat "items"
      back : false ,
      deep : 1,
      last_form_clicked:"",
      path : [],
    onMounted() {
      console.log(this.props)
      this.props.UpdatePath(this.path)
      this.Fill_List_With_Form() 

     
     
    },


    Back(){

      
      if(this.deep == 2){
        this.Fill_List_With_Form() 
        this.deep = 1
        this.update()
        this.removeFromPath()
        this.removeFromPath()
        console.log("deep 2")
      }


       else if(this.deep == 3){
        this.Fill_List_With_Form_detailled(this.last_form_clicked) 
        this.deep = 2
        this.update()
        this.props.SendForm("")
        this.removeFromPath()
        console.log("deep 3")
      }



    },


    async Fill_List_With_Form() {

    this.items = []
      
      this.back = false
      if(!localStorage.getItem("tab_form")){
              try {
                const response = await fetch('https://data.enseignementsup-recherche.gouv.fr/api/records/1.0/search/?dataset=fr-esr-parcoursup&q=&rows=100&sort=tri&facet=session&facet=contrat_etab&facet=cod_uai&facet=g_ea_lib_vx&facet=dep_lib&facet=region_etab_aff&facet=acad_mies&facet=ville_etab&facet=lib_for_voe_ins&facet=select_form&facet=fili&facet=form_lib_voe_acc&facet=fil_lib_voe_acc&facet=detail_forma&facet=tri&facet=cod_aff_form&facet=etablissement_id_paysage&facet=composante_id_paysage&timezone=Europe%2FBerlin');
                const data = await response.json();
                this.items = data.facet_groups[10]["facets"];
                localStorage.setItem('tab_form',JSON.stringify(this.items))
                this.update()
              } catch (error) {
                console.error(error);
              }
      }else{
        this.items = JSON.parse(localStorage.getItem('tab_form'))
        this.update()
      }
    },


    async Fill_List_With_Form_detailled(name_form){

    this.items = []

        console.log(name_form)
        this.addtoPath(name_form,0)
        this.last_form_clicked = name_form
            if(!localStorage.getItem(name_form)){
                    try {
                      this.back = true
                      this.items = []
                      
                        const response = await fetch('https://data.enseignementsup-recherche.gouv.fr/api/records/1.0/search/?dataset=fr-esr-parcoursup&q=&rows=400&start=0&sort=tri&facet=session&facet=contrat_etab&facet=cod_uai&facet=g_ea_lib_vx&facet=dep_lib&facet=region_etab_aff&facet=acad_mies&facet=ville_etab&facet=lib_for_voe_ins&facet=select_form&facet=fili&facet=form_lib_voe_acc&facet=fil_lib_voe_acc&facet=detail_forma&facet=tri&facet=cod_aff_form&facet=etablissement_id_paysage&facet=composante_id_paysage&refine.fili='+name_form+'&timezone=Europe%2FBerlin')
                        const data = await response.json()
                        this.items= data.facet_groups[11].facets
                         localStorage.setItem(name_form,JSON.stringify(this.items))                          
                        this.deep = 2
                        this.update()
                      } catch (error) {
                        console.error(error);
                      }
           }else{
            this.back = true
           this.deep = 2    
        this.items = JSON.parse(localStorage.getItem(name_form))
        this.update()

      }


    },

    async Fill_With_Libelle_form(name_form){


      this.items = []
        console.log(name_form)
        this.addtoPath(name_form,1)
            if(!localStorage.getItem(name_form)){
                    try {                 
                      this.items = []
                        const response = await fetch('https://data.enseignementsup-recherche.gouv.fr/api/records/1.0/search/?dataset=fr-esr-parcoursup&q=&rows=400&start=0&sort=tri&facet=session&facet=contrat_etab&facet=cod_uai&facet=g_ea_lib_vx&facet=dep_lib&facet=region_etab_aff&facet=acad_mies&facet=ville_etab&facet=lib_for_voe_ins&facet=select_form&facet=fili&facet=form_lib_voe_acc&facet=fil_lib_voe_acc&facet=detail_forma&facet=tri&facet=cod_aff_form&facet=etablissement_id_paysage&facet=composante_id_paysage&refine.form_lib_voe_acc='+name_form+'&timezone=Europe%2FBerlin')
                        const data = await response.json()
                        this.items= data.facet_groups[12].facets
                         localStorage.setItem(name_form,JSON.stringify(this.items))
                        this.deep = 3
                        this.update()
                      } catch (error) {
                        console.error(error);
                      }
           }else{  
           this.deep = 3   
        this.items = JSON.parse(localStorage.getItem(name_form))
        this.update()
      }


    },

    addtoPath(e,rank){

      this.path[rank]= e
      this.props.UpdatePath(this.path)

    },

    removeFromPath(){
      this.path.pop()
      this.props.UpdatePath(this.path)

    }


    





    

  }
</script>


</menu>
